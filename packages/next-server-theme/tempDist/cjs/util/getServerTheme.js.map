{"version":3,"file":"getServerTheme.js","sources":["../../../../src/react/util/getServerTheme.ts"],"sourcesContent":["import { cookies } from \"next/headers\";\nimport type { Theme, ResolvedTheme } from \"../types\";\n\n// This is basically a static variable\n// But we warned while hot reloading this will stay the same\n// Basically makes sure all the components are in sync\n// Basically allows me to know what the default theme is from the prop set on the Provider\nlet defaultThemeStatic: string;\nlet cookie: string | undefined;\n\nexport function getServerThemeForProvider(\n    defaultTheme?: Theme,\n    themeKey = \"theme\"\n): Theme {\n    if (defaultTheme) {\n        defaultThemeStatic = defaultTheme;\n    }\n    cookie = cookies().get(themeKey)?.value;\n\n    // even if the theme is system before being displayed the right theme will be set\n    return cookie ?? defaultThemeStatic;\n}\n\nexport function getServerTheme(): ResolvedTheme | \"\" {\n    // In order to use the default theme from the provider without repeeating the prop twice\n    // I use a static variable to store the default theme from the provider intially\n    console.log(\"cookie\", cookie, \"defaultThemeStatic\", defaultThemeStatic);\n    const theme = cookie ?? defaultThemeStatic;\n\n    // This is cause whene the user renders the theme on the server we want just \"\" not \"system\"\n    // Since if they have the theme prop we need to remove it too or we just don't have it\n    if (theme === \"system\") {\n        return \"\";\n    } else {\n        return theme;\n    }\n}\n"],"names":["defaultThemeStatic","cookie","console","log","theme","defaultTheme","themeKey","cookies","get","value"],"mappings":"2CAOA,IAAIA,EACAC,oCAkBAC,QAAQC,IAAI,SAAUF,EAAQ,qBAAsBD,GACpD,MAAMI,EAAQH,GAAUD,EAIxB,MAAc,WAAVI,EACO,GAEAA,CAEf,6CAzBIC,EACAC,EAAW,SAQX,OANID,IACAL,EAAqBK,GAEzBJ,EAASM,EAAAA,UAAUC,IAAIF,IAAWG,MAG3BR,GAAUD,CACrB"}